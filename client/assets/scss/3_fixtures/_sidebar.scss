/*
//
// SIDEBAR
// For user-specific info
//
*/

$sidebar-breakpoint: $nav-main-breakpoint;
$sidebar-width: $nav-sidebar-width;

$sidebar-background: spheric-color('light');
$sidebar-foreground: spheric-color('dark', 'secondary');

$sidebar-item-hover-color: spheric-color('primary', 'barely');

.sidebar {
  .close-button {
    z-index: 100;
  }

  &.panel {
    background-color: $sidebar-background;
  }

  &.is-active {
    // make sure it's always flex
    display: flex;
  }

  // always display once breakpoint is hit
  @include breakpoint($sidebar-breakpoint) {
    @include grid-panel-reset;
    @include grid-block($sidebar-width);

    &.is-active {
      // hard remove drop shadow in case active class stays with during window resize
      box-shadow: none !important;
    }
  }
}

// hide the buttons when not hideable
.sidebar .close-button,
.toggle-sidebar {
  @include hide-for($sidebar-breakpoint);
}

// SIDEBAR ACTION
// "fixed" button at the bottom of the sidebar

.sidebar-action .grid-content {
  padding-top: $global-padding;
  // create a sudo element to act as a content fade
  &::before {
    content: "";
    display: block;
    position: absolute;
    width: calc(100% - #{$global-padding});
    height: $global-padding;
    top: -($global-padding*.95);
    left: 0;

    background: linear-gradient(rgba($sidebar-background, 0) 0%, rgba($sidebar-background, 1) 100%);
  }
}


// SIDEBAR BLOCK LIST
// based on Foundation's block-list via mixins

.sidebar-block-list {
  // This gets you basic styles
  @include block-list-container();

  // add a border to the bottom that doesn't span the whole width
  &:not(:last-child)::after {
    content: "";
    display: block;
    width: 90%;
    margin: 0 auto;
    height: 1px;
    background-color: color-opacity($sidebar-foreground, 'barely');
  }

  // remove margins from last items
  &:last-child {
    margin-bottom: 0;
  }

  header {
    @include block-list-header(
      $color: color-opacity($sidebar-foreground, 'tertiary'),
      $offset: 0
    );
    @extend %h6;

    text-align: center;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  li {
    @include block-list-item(
      $color: $sidebar-foreground,
      $color-hover: $sidebar-foreground,
      $color-disabled: color-opacity($sidebar-foreground, 'tertiary'),
      $background: transparent,
      $background-hover: $sidebar-item-hover-color,
      $border: none,
      $padding: $global-padding
    );
  }

  form {
    margin-left: $global-padding;
    margin-right: $global-padding;
  }

  .accordion-title {
    @extend %h6;
    padding: $global-padding;
    text-align: right;
    color: color-opacity($sidebar-foreground, 'tertiary');

    &:hover, &:focus {
      background: $sidebar-item-hover-color;
    }
  }
}


// SIDEBAR BLOCK LIST ITEMS
// Element to display tournament as list item

.sidebar-block-list .item {
  > a {
    display: flex !important; // need to override display block
    @include grid-orient(horizontal);
    @include grid-align(justify);
    align-items: flex-end;

    h4 {
      margin-top: 0;
    }

    span > *:last-child {
      margin-bottom: 0;
    }

    .extra {
      text-align: right;
    }

    .expand {
      flex-basis: 100%;
    }
  }

  // TRUNCATING
  .content {
    width: 100%;

    h4, h5, h6 {
      @include force-truncate;
    }

    p {
      @include fake-truncate();
    }
  }

  &.with-extra {
    .content {
      width: 70%;
    }
    .extra {
      width: 30%;
    }
  }

  // COLORS AND FONT STYLES
  .extra {
    font-weight: $font-weight-bold;
  }

  h5 {
    color: $sidebar-foreground;
  }

  // SPECIFIC EXTRAS
  .quote {
    padding-left: 1rem;
    i {
      font-size: .7rem;
      margin-left: -1rem;
      vertical-align: super;
    }
  }

  .stat {
    color: spheric-color('dark');
  }

  .date {
    @extend %h6;
    display: inline-block;
    text-align: center;
    margin-bottom: .2rem;

    .icon {
      display: block;
      font-size: 1rem;
    }
  }

  .timestamp {
    text-align: right;
    margin-bottom: .4rem;
    font-size: .7em;
    color: color-opacity($sidebar-foreground, 'tertiary');
    font-weight: $font-weight-bold;
  }

  .image {
    align-self: center;

    // TODO: Create component
    > span {
      width: 2.5rem;
      height: 2.5rem;
      background-color: color-opacity($sidebar-foreground, 'barely');
      display: inline-block;
      border-radius: $global-radius;
      font-size: 1rem;
      text-align: center;

      i {
        @extend .fa-fw;
        margin-top: .75rem;
      }
    }
  }

  progress {
    margin-top: 1rem;
  }
}

// SLIM STYLE
// less vertical padding

.sidebar-block-list .slim-list {

  li > a,
  .accordion-title {
    // reduce vertical padding
    padding-top: $global-padding/2;
    padding-bottom: $global-padding/2 + .2;
  }

  // TODO: Move to Chat specific styles
  .unavailable {
    h5 {
      color: $sidebar-foreground;
    }
  }

  .available {
    h5 {
      font-weight: $font-weight-bold;
    }
    .extra {
      color: spheric-color('success');
    }
  }
}