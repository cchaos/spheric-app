/*
//
// SIDEBAR
// For user-specific info
//
*/

$sidebar-breakpoint: $nav-main-breakpoint;
$sidebar-width: $nav-sidebar-width;

$sidebar-background: spheric-color('light');
$sidebar-foreground: spheric-color('dark', 'secondary');

.sidebar {
  &.panel {
    background-color: $sidebar-background;
  }

  // always display once breakpoint is hit
  @include breakpoint($sidebar-breakpoint) {
    @include grid-panel-reset;
    @include grid-block($sidebar-width);

    // hard remove drop shadow in case active class stays with during window resize
    &.is-active {
      box-shadow: none !important;
    }
  }
}

// hide the buttons when not hideable
.sidebar .close-button,
.toggle-sidebar {
  @include hide-for($sidebar-breakpoint);
}


// SIDEBAR BLOCK LIST
// based on Foundation's block-list via mixins

.sidebar-block-list {
  // This gets you basic styles
  @include block-list-container();

  // add a border to the bottom that doesn't span the whole width
  &:not(:last-child)::after {
    content: "";
    display: block;
    width: 90%;
    margin: 0 auto;
    height: 1px;
    background-color: color-opacity($sidebar-foreground, 'barely');
  }

  header {
    @include block-list-header(
      $color: color-opacity($sidebar-foreground, 'tertiary'),
      $font-size: .8rem,
      $uppercase: true,
      $offset: 0
    );

    text-align: center;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  li {
    @include block-list-item(
      $color: $sidebar-foreground,
      $color-hover: $sidebar-foreground,
      $color-disabled: color-opacity($sidebar-foreground, 'tertiary'),
      $background: transparent,
      $background-hover: spheric-color('primary', 'barely'),
      $border: none,
      $padding: $global-padding
    );
  }
}


// SIDEBAR BLOCK LIST ITEMS
// Element to display tournament as list item

.sidebar-block-list .item {
  > a {
    display: flex !important; // need to override display block
    @include grid-orient(horizontal);
    @include grid-align(justify);
    align-items: flex-end;

    span > *:last-child {
      margin-bottom: 0;
    }

    .extra {
      text-align: right;
    }

    .expand {
      flex-basis: 100%;
    }
  }

  // TRUNCATING
  .content {
    width: 100%;

    h5, h6 {
      @include force-truncate;
    }

    p {
      @include fake-truncate();
    }
  }

  &.with-extra {
    .content {
      width: 70%;
    }
    .extra {
      width: 30%;
    }
  }

  // COLORS AND FONT STYLES
  h5 {
    margin-top: 0;
    color: spheric-color('dark');
  }

  h5, .extra {
    font-weight: $font-weight-bold;
  }

  h6 {
    color: $sidebar-foreground;
  }

  // SPECIFIC EXTRAS
  .stat {
    color: spheric-color('dark');
  }

  .date {
    text-transform: uppercase;
    font-size: .8rem;
    text-align: center;
    margin-bottom: .2rem;

    .icon {
      display: block;
      font-size: 1rem;
    }
  }

  .timestamp {
    text-align: right;
    margin-bottom: .4rem;
    font-size: .7em;
    color: color-opacity($sidebar-foreground, 'tertiary');
    font-weight: $font-weight-bold;
  }

  .image {
    align-self: flex-start;

    // TODO: Create component
    > span {
      width: 2.5rem;
      height: 2.5rem;
      background-color: color-opacity($sidebar-foreground, 'barely');
      display: inline-block;
      border-radius: $global-radius;
      font-size: 1rem;
      text-align: center;

      i {
        @extend .fa-fw;
        margin-top: .75rem;
      }
    }
  }

  progress {
    margin-top: 1rem;
  }

}